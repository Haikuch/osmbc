extends layout


block content
  h1
    | Current OSM Wiki Calender as Markdown
  p
    | This is an <b>experimental (!)</b> view on the calender in OpenStreetMap.
    | It displays the events from today until 2 weeks.<br>
    | Markdown is converted and previewed on this page.
    | OSMBC tries to have a nice looking markdown table, if this disturbs your edit experience
    | please disable prettifying.
  .checkbox
    label
    input(type='checkbox', id='disable', value='test')
    | Disable Prettify Table    

  h3
    | Markdown, please edit
  textarea(id="markdown" rows=25 cols=500 style="font-family:monospace")
    |#{calenderAsMarkdown}
  h3 
   | Preview
  p(id="preview")
  h3
    | HTML to copy
  textarea(id="html" rows=20 cols=500 style="font-family:monospace")
  

block scripts                
  script(src='https://cdn.jsdelivr.net/markdown-it/5.0.1/markdown-it.min.js')
  script(src="https://cdn.rawgit.com/Triforcey/clip-j/1dbfdfc0646359ee70d714549db947d02705b303/clip-j.js" )

  script.
    window.onload = init;

    function init() {

      markdown = document.getElementById("markdown");
      if (markdown) {
        markdown.onchange = onchange;
        markdown.onkeyup = onchange;
      }
      onchange();
    }

  
   
    function convert(text) {
      converter = new window.markdownit();
      // convert md to html
      text = converter.render(text);
      // skip <ul> and </ul> at start and end
      
      
      return text;

    }

    var empty = "                                                                                  ";
    empty = empty+empty;
    empty = empty+empty;
    empty = empty+empty;
    var lineString = "---------------------------------------------------";
    lineString = lineString + lineString;
    lineString = lineString + lineString;
    lineString = lineString + lineString;

    function wl(string,length) {
        return (string + empty).substring(0,length);
    }
    function ll(length) {
      return lineString.substring(0,length);
    }

    function prettifyTable(text) {

      var lines=[];
      var content = text.match(/\|([^\|]*)/g);
    
      lengthOrt = 0;
      lengthInhalt = 0;
      lengthDatum = 0;
      lengthCountry = 0;
      for (var i=0;i<content.length-1;i=i+5) {
        if (i==5) continue;
        lengthOrt = Math.max(lengthOrt,content[i].trim().length);
        lengthInhalt = Math.max(lengthInhalt,content[i+1].trim().length);
        lengthDatum = Math.max(lengthDatum,content[i+2].trim().length);
        lengthCountry = Math.max(lengthCountry,content[i+3].trim().length);
      }
      var result = "";
      for (var i=0;i<content.length-1;i=i+5) {
        if (i==5) {
           result += "|"+ll(lengthOrt-1)+"|"+ll(lengthInhalt-1)+"|"+ll(lengthDatum-1)+"|"+ll(lengthCountry-1)+"|"+"\n";
          } else
          {
           result += wl(content[i],lengthOrt)+wl(content[i+1],lengthInhalt)+wl(content[i+2],lengthDatum)+wl(content[i+3],lengthCountry)+"|"+"\n";
          
          }
      }
      return result;
     

    }
  
    
  

    

    
    function onchange() {
      var md = document.getElementById("markdown").value;
      preview = document.getElementById("preview");
      html = document.getElementById("html");
      var t = convert(md);
      preview.innerHTML = t;
      html.value = t;
      if (!document.getElementById("disable").checked) {
          setTimeout(function() {
            var st = document.getElementById("markdown").selectionStart;
            var se = document.getElementById("markdown").selectionEnd;
            document.getElementById("markdown").value = prettifyTable(md);
            document.getElementById("markdown").selectionStart = st;
            document.getElementById("markdown").selectionEnd = se;

          },1);
            
        }
    
      }
   
   


