extends blogheader


block blogcontent

  .row
    .col-md-1
    .col-md-11
      :verbatim
        <br><br>
        !{renderer.subtitle(left_lang)}
  for c in categories
    if (articles[c.EN])
      .row
        .col-md-1
        .col-md-11
          .row
            div(class=columnLeftSize)
              :verbatim
                !{renderer.categoryTitle(left_lang,c)}
            div(class=columnRightSize)
              :verbatim
                !{renderer.categoryTitle(right_lang,c)}

      for a in articles[c.EN]
          .row
            .col-md-1
              +articleIcons(a)
            .col-md-11
              .row
                div(class=columnLeftSize)
                  div(onclick="if (!openEditor) {openEditor = document.getElementById('ldiv#{a.id}');openEditor.classList.toggle('hidden');} else {openEditor.classList.toggle('hidden');openEditor = null;} return false;")
                    div(class=(a["markdown" + lang]) ? "" : "mark")
                      ul
                        :verbatim
                          !{renderer.article(left_lang,a)}
                  div.hidden(id="ldiv#{a.id}")
                    form(name="lEditArticle",id="lEditArticle#{a.id}", action="#{layout.htmlroot}/article/#{a.id}/setMarkdown/#{left_lang}", method="post")
                      textarea.form-control(name="markdown" id="lmarkdown" + a.id rows=7 onchange="onLeaveText('l',#{a.id});") #{a["markdown" + left_lang]}
                      textarea.hidden.form-control(name="oldMarkdown"  id="loldMarkdown#{a.id}" rows=7 ) #{a["markdown" + left_lang]}
                    p
                      if a.author && a.author.collection
                        span="Collected: ["
                        for author in a.author.collection
                          span=author
                        span="] "
                      if a.author && a.author["markdown" + left_lang]
                        span="Edited: ["
                        for author in a.author["markdown"+left_lang]
                          span=author
                        span="] "
                div(class=columnRightSize)
                  if right_lang
                    div(onclick="if (!openEditor) {openEditor = document.getElementById('rdiv#{a.id}');openEditor.classList.toggle('hidden');} else {openEditor.classList.toggle('hidden');openEditor = null;} return false;")
                      div(class=(a["markdown" + lang]) ? "" : "mark")
                        ul
                          :verbatim
                            !{renderer.article(right_lang,a)}
                    div.hidden(id="rdiv#{a.id}")
                      form(name="rEditArticle",id="rEditArticle#{a.id}", action="#{layout.htmlroot}/article/#{a.id}/setMarkdown/#{right_lang}", method="post")
                        textarea.form-control(name="markdown" id="rmarkdown" + a.id rows=7 onchange="onLeaveText('r',#{a.id});") #{a["markdown" + right_lang]}
                        textarea.hidden.form-control(name="oldMarkdown"  id="roldMarkdown#{a.id}" rows=7 ) #{a["markdown" + right_lang]}
                      p
                        if a.author && a.author.collection
                          span="Collected: ["
                          for author in a.author.collection
                            span=author
                          span="] "
                        if a.author && a.author["markdown" + right_lang]
                          span="Edited: ["
                          for author in a.author["markdown"+right_lang]
                            span=author
                          span="] "
  +articleIconLegend




block scripts
  script(src='https://cdn.rawgit.com/showdownjs/showdown/master/dist/showdown.min.js')
  script(src="https://cdn.rawgit.com/Triforcey/clip-j/1dbfdfc0646359ee70d714549db947d02705b303/clip-j.js" )
  script.
    var openEditor = null;
    window.onload = function() {
      
      if (typeof(Storage)!=="undefined") {
        if (window.sessionStorage.blogUrl !== window.location.href) return;
        var x = window.sessionStorage.blogX;
        var y = window.sessionStorage.blogY;
        window.scrollTo(x,y);
      }
    }


    window.onbeforeunload = function(event) {
      // store the scroll Position in the local Store
      s = {x:window.scrollX,y:window.scrollY};

      if (typeof(Storage)!=="undefined") {

        window.sessionStorage.blogUrl = window.location.href;
        window.sessionStorage.blogX = s.x;
        window.sessionStorage.blogY = s.y;
      }
    };

    function onLeaveText(column,id) {
      console.log("leave text"+column+id);

      var oldValue = document.getElementById(column+"oldMarkdown"+id).value;
      var newValue = document.getElementById(column+"markdown"+id).value;
      if (oldValue === newValue) return;
      form = document.getElementById(column + 'EditArticle' + id);
      console.log(form);
      form.submit();
    }




